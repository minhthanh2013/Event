version: '3.8'
services:
  postgres:
    image: postgres:13
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: evenity
    restart: unless-stopped
    networks:
      - doan2022
    container_name: postgres
  redis:
    image: redis
    ports:
      - 6379:6379
    networks:
      - doan2022
    container_name: redis
  frontend:
    tty: true
    stdin_open: true # without this node doesn't start
    build:
      dockerfile: ./Dockerfile
      context: ./Frontend__Client
    image: frontend
    ports:
      - 8080:8080
    networks:
      - doan2022
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - core-api
  core-api:
    tty: true
    stdin_open: true # without this node doesn't start
    build:
      dockerfile: ./Dockerfile
      context: ./core-api
    depends_on:
      - postgres
    ports:
      - 3000:3000
    networks:
      - doan2022  
    restart: unless-stopped
    volumes:
      - DISK1:/usr/src/app/resources
    container_name: core-api
  payment:
    tty: true
    stdin_open: true # without this node doesn't start
    build:
      dockerfile: ./Dockerfile
      context: ./payment
    # ports:
    #   - 3002:4002
    networks:
      - doan2022  
    container_name: payment
    restart: unless-stopped
  zoom:
    tty: true
    stdin_open: true # without this node doesn't start
    build:
      dockerfile: ./Dockerfile
      context: ./zoom
    # ports:
    #   - 3001:4001
    networks:
      - doan2022  
    volumes:
      - DISK1:/usr/src/app/resources
    container_name: zoom
    restart: unless-stopped
  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - core-api
    networks:
      - doan2022
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    # command: certonly --webroot --webroot-path=/var/www/html --agree-tos --staging -d api.evenity.page -d www.api.evenity.page
    # command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com
    command: certonly --webroot --webroot-path=/var/www/html --email sammy@evenity.page --agree-tos --no-eff-email --force-renewal -d evenity.page  -d www.evenity.page
    # command: >
    #  sh -c "certonly --webroot --webroot-path=/var/www/html --email sammy@evenity.page --agree-tos --no-eff-email --force-renewal -d evenity.page  -d www.evenity.page  &&
    #         certonly --webroot --webroot-path=/var/www/html --email sammy@evenity.page --agree-tos --no-eff-email --force-renewal -d api.evenity.page -d www.api.evenity.page"
  webserver-api:
    image: nginx:mainline-alpine
    container_name: webserver-api
    restart: unless-stopped
    volumes:
      - web-root-api:/var/www/html
      - ./nginx-conf-api:/etc/nginx/conf.d
      - certbot-etc-api:/etc/letsencrypt
      - certbot-var-api:/var/lib/letsencrypt
      - dhparam-api:/etc/ssl/certs
    ports:
      - "8000:8000"
      - "8443:8443"
    depends_on:
      - core-api
    networks:
      - doan2022
  certbot-api:
    image: certbot/certbot
    container_name: certbot-api
    volumes:
      - certbot-etc-api:/etc/letsencrypt
      - certbot-var-api:/var/lib/letsencrypt
      - web-root-api:/var/www/html
    depends_on:
      - webserver-api
    command: certonly --webroot --webroot-path=/var/www/html --email sammy@api.evenity.page --agree-tos --no-eff-email --force-renewal -d api.evenity.page  -d www.api.evenity.page
    # command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com
    # command: certonly --webroot --webroot-path=/var/www/html --email sammy@evenity.page --agree-tos --no-eff-email --force-renewal -d evenity.page  -d www.evenity.page
networks:
  doan2022:
    driver: bridge
volumes:
  DISK1:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: ~/Event/views
      o: bind
  certbot-etc-api:
  certbot-var-api:
  web-root-api:
    driver: local
    driver_opts:
      type: none
      device: ~/Event/views
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ~/Event/dhparam/
      o: bind
  dhparam-api:
    driver: local
    driver_opts:
      type: none
      device: ~/Event/dhparam-api/
      o: bind